
name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: trace
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: example
        ports: [5432:5432]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install

      - name: Run frontend tests
        working-directory: frontend
        run: npm test -- --watchAll=false

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install backend dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backend unit tests
        working-directory: backend
        run: pytest

      - name: Docker Compose Build & Test
        run: |
          docker-compose -f infra/docker-compose.yml up --build -d
          sleep 10
          curl -X POST http://localhost:5000/init-db || true

      - name: Teardown
        if: always()
        run: docker-compose -f infra/docker-compose.yml down
